# say a happy hello!
if [[ $EUID -eq 0 ]]; then
	printf "\n       \\               ♥*♥*♥*♥*♥*♥*♥*♥*♥\n        \ji            ♥ Hello Roooot! ♥\n        /.(((          ♥*♥*♥*♥*♥*♥*♥*♥*♥\n       (,/\"(((__,--. \n           \  ) _( /{  \n           !|| \" :||    \n           !||   :||  \n           '''   '''  \n  "
elif [ -z "$(command -v lolcat)" ]; then
	printf "\n       \\               ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥\n        \ji            ♥ Happy Coding! ♥\n        /.(((          ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥\n       (,/\"(((__,--. \n           \  ) _( /{  \n           !|| \" :||    \n           !||   :||  \n           '''   '''  \n  "
else
	printf "\n       \\               ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥\n        \ji            ♥ Happy Coding! ♥\n        /.(((          ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥\n       (,/\"(((__,--. \n           \  ) _( /{  \n           !|| \" :||    \n           !||   :||  \n           '''   '''  \n  " | lolcat --freq=1
fi



if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		MAGENTA=$(tput setaf 9)
		ORANGE=$(tput setaf 172)
		GREEN=$(tput setaf 190)
		PURPLE=$(tput setaf 141)
		WHITE=$(tput setaf 0)
		RED=$(tput setaf 160)
		# RAINBOWWW

		HAPPYVIOLET=$(tput setaf 201)
		HAPPYBLUE=$(tput setaf 110)
		HAPPYGREEN=$(tput setaf 82)
		HAPPYYELLOW=$(tput setaf 226)
		HAPPYORANGE=$(tput setaf 202)


	else
		RED=$(tput setaf 1)
		GREEN=$(tput setaf 2)
		YELLOW=$(tput setaf 3)
		BLUE=$(tput setaf 4)
		MAGENTA=$(tput setaf 5)
		CYAN=$(tput setaf 6)
		WHITE=$(tput setaf 7)

		HAPPYVIOLET=MAGENTA
		HAPPYBLUE=CYAN
		HAPPYGREEN=GREEN
		HAPPYYELLOW=YELLOW
		HAPPYORANGE=RED
	fi
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	MAGENTA="\033[1;31m"
	ORANGE="\033[1;33m"
	GREEN="\033[1;32m"
	PURPLE="\033[1;35m"
	WHITE="\033[1;37m"
	RED="\033[0;31m"
	BOLD=""
	RESET="\033[m"

	HAPPYVIOLET=MAGENTA
	HAPPYBLUE=ORANGE
	HAPPYGREEN=GREEN
	HAPPYYELLOW=PURPLE
	HAPPYORANGE=WHITE
fi

export MAGENTA
export ORANGE
export GREEN
export PURPLE
export WHITE
export BOLD
export RESET


function parse_git_dirty() {
	[[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
}

function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}


if [[ $EUID -eq 0 ]]; then
	# Sexy Bash Prompt for admin
	# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
	# Shamelessly copied from https://github.com/gf3/dotfiles
	# Screenshot: http://i.imgur.com/s0Blh.png
	export PS1="\[${BOLD}${MAGENTA}\]\u \[$WHITE\]at \[$ORANGE\]\h \[$WHITE\]in \[$GREEN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$WHITE\] ($(ls -1 | wc -l | sed 's: ::g') files)\n\$ \[$RESET\]"
else
	# rainbow theme for awesome users
	export PS1="\[${BOLD}${HAPPYVIOLET}\]\u \[$WHITE\]at \[$HAPPYBLUE\]\h \[$WHITE\]in \[$HAPPYGREEN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$HAPPYYELLOW\]\$(parse_git_branch)\[$HAPPYORANGE\] ($(ls -1 | wc -l | sed 's: ::g') files)\n\$ \[$RESET\]"
fi

export PS2="\[$ORANGE\]→ \[$RESET\]"